@model WinUIApp.WebUI.Models.RatingReviewViewModel
@{
    ViewData["Title"] = "Add Review";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="modern-card rating-summary">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-4">
                        <h2 class="fw-bold mb-0">Add Your Review</h2>
                        <div class="ms-3 rating-value">
                            <div class="rating-stars">
                                @{
                                    var score = (TempData["RatingValue"] != null) ? 
                                        Convert.ToInt32(TempData["RatingValue"]) : Model.Score;
                                    
                                    for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= score)
                                        {
                                            <i class="bi bi-star-fill text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-star text-warning"></i>
                                        }
                                    }
                                }
                                <span class="ms-2 fw-bold">@(TempData["RatingValue"] ?? Model.Score)</span>
                            </div>
                        </div>
                    </div>
                    
                    <form asp-action="AddRatingAndReview" method="post" class="review-form">
                        <input type="hidden" asp-for="DrinkId" />
                        <input type="hidden" asp-for="RatingId" />
                        <input type="hidden" asp-for="Score" />
                        
                        <div class="mb-4">
                            <label asp-for="ReviewContent" class="form-label fw-bold">
                                <i class="bi bi-chat-quote me-2 text-primary"></i>
                                Share your thoughts:
                            </label>
                            <textarea asp-for="ReviewContent" class="form-control shadow-sm" rows="5" 
                                     maxlength="500" required
                                     placeholder="What did you like or dislike about this drink?"
                                     style="border-radius: var(--border-radius); resize: none;"></textarea>
                            <div class="d-flex justify-content-between mt-2">
                                <span asp-validation-for="ReviewContent" class="text-danger"></span>
                                <small class="text-muted" id="charCount">0/500 characters</small>
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-end gap-3 mt-4">
                            <a asp-action="DrinkDetail" asp-route-id="@Model.DrinkId" class="action-btn btn btn-outline-secondary px-4">
                                <i class="bi bi-x-lg me-2"></i>Cancel
                            </a>
                            <button type="submit" class="action-btn btn btn-primary px-4">
                                <i class="bi bi-check-lg me-2"></i>Submit Review
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const textarea = document.querySelector('textarea[asp-for="ReviewContent"]');
            const charCount = document.getElementById('charCount');
            
            // Update character count
            textarea.addEventListener('input', function() {
                const currentLength = textarea.value.length;
                charCount.textContent = `${currentLength}/500 characters`;
                
                // Add visual feedback as user approaches limit
                if (currentLength >= 450) {
                    charCount.classList.add('text-danger');
                    charCount.classList.remove('text-warning', 'text-muted');
                } else if (currentLength >= 400) {
                    charCount.classList.add('text-warning');
                    charCount.classList.remove('text-danger', 'text-muted');
                } else {
                    charCount.classList.remove('text-warning', 'text-danger');
                    charCount.classList.add('text-muted');
                }
                
                // Add a subtle animation effect when typing
                if (currentLength > 0) {
                    textarea.style.boxShadow = '0 0 0 0.25rem rgba(98, 0, 238, 0.1)';
                    setTimeout(() => {
                        textarea.style.boxShadow = '';
                    }, 300);
                }
            });
            
            // Enhance focus state
            textarea.addEventListener('focus', function() {
                this.parentElement.classList.add('shadow-sm');
            });
            
            textarea.addEventListener('blur', function() {
                this.parentElement.classList.remove('shadow-sm');
            });
            
            // Create a subtle entrance animation
            setTimeout(() => {
                document.querySelector('.modern-card').classList.add('fade-in-animation');
            }, 100);
            
            textarea.focus();
        });
    </script>
      <style>
        
        @@keyframes fadeInUp {
            from {
                opacity: 0.7;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }


        .fade-in-animation {
            animation: fadeInUp 0.5s ease-out forwards;
        }
        
        textarea.form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(98, 0, 238, 0.15);
        }
        
        .action-btn:hover {
            transform: translateY(-2px);
            transition: all 0.3s ease;
        }
    </style>
}
